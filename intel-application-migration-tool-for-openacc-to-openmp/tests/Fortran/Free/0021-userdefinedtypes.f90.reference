module m_test
    implicit none
    type test_type_allocatable
    integer n
    real, allocatable :: datum(:)
    end type
!$omp declare mapper (test_type_allocatable::x) map ( &
!$omp  x%n &
!$omp , x%datum(:) &
!$omp )
    type test_type_pointer
    integer n
    real, allocatable :: datum(:)
    end type
!$omp declare mapper (test_type_pointer::x) map ( &
!$omp  x%n &
!$omp , x%datum(:) &
!$omp )
end module

program test
  use m_test
  implicit none
  type(test_type_allocatable) :: tta
  type(test_type_pointer) :: ttp

  tta%N = 123
  allocate (tta%datum(tta%N))
  tta%datum = 0

  !$acc serial copy(tta)
!$omp target map(tofrom:tta)
    tta%datum(10) = 123
  !$acc end serial
!$omp end target

  if (sum(tta%datum) == 123) then
    write (*,*) "Success"
  else
    write (*,*) "Failure"
  endif

  ttp%N = 123
  allocate (ttp%datum(ttp%N))
  ttp%datum = 0

  !$acc serial copy(ttp)
!$omp target map(tofrom:ttp)
    ttp%datum(100) = 321
  !$acc end serial
!$omp end target

  if (sum(ttp%datum) == 123) then
    write (*,*) "Success"
  else
    write (*,*) "Failure"
  endif

end program

! Code was translated using: /nfs/site/home/hservatg/src/intel-application-migration-tool-for-openacc-to-openmp/src/intel-application-migration-tool-for-openacc-to-openmp -force-backup -keep-binding-clauses=all -free 0021-userdefinedtypes.f90
